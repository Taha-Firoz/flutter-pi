name: CMake

on:
  push:
    branches: [ master, feature/gh-actions ]
  pull_request:
    branches: [ master, feature/gh-actions ]
  workflow_dispatch:

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Debug

jobs:
  build:
    runs-on: [linux, bullseye]

    steps:
    - uses: actions/checkout@v2

    - name: Install dependencies
      run: sudo apt-get install -y cmake libgl1-mesa-dev libgles2-mesa-dev libegl1-mesa-dev libdrm-dev libgbm-dev ttf-mscorefonts-installer fontconfig libsystemd-dev libinput-dev libudev-dev  libxkbcommon-dev ninja-build libgstreamer-plugins-base1.0-dev

    - name: Configure CMake
      run: cmake -B ${{github.workspace}}/build -DBUILD_OMXPLAYER_VIDEO_PLAYER_PLUGIN=On -DBUILD_GSTREAMER_AUDIO_PLAYER_PLUGIN=On -DBUILD_GSTREAMER_VIDEO_PLAYER_PLUGIN=On -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -GNinja

    - name: Build
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

    - name: Test
      if: false
      working-directory: ${{github.workspace}}/build
      run: ctest -C ${{env.BUILD_TYPE}}

  crossbuild:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        img: ['arm32v6/debian:bullseye', 'arm32v7/debian:bullseye', 'arm64v8/debian:bullseye', 'i386/debian:bullseye', 'amd64/debian:bullseye', 'riscv64/debian:bullseye', 'navikey/raspbian-bullseye']
    steps:
     - uses: actions/checkout@v2
     
     - uses: ./.github/actions/build-flutter-pi
       with:
         image: ${{ matrix.img }}
         cmake-args: |
           -DCMAKE_BUILD_TYPE=Release
